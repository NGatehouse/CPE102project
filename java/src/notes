____________________________________________________________________
                         --- Assignment 4 ---
--  All entities.
• All actions (triggered by time; see System.getCurrentTimeMillis).
• Displaying the world with sprites (with the image list loaded from a file).
• Moving the viewport.
• Loading the world from a file.
• Entity movement.

--  Removed Functionality
Your translated project will not include the builder portion of the original project. Your translation is not
required to include the colored square under the mouse pointer.


1. GUI (WorldView.py)
    - No Mouse hover functionality
    - mouse_buttons.py is just enums
    - key.py is dictionary
    - NO builder.py or builder_controller.py

Over Weekend
  Nick
    Image_store.py
    Ordered_lists.py
    Save_Load.py (start)
  Luke
    WorldView.py
    Controller.py (start) (don't do activity_loop)

---DONE----
occ_grid.py
point.py

this.position = super(position)

____________________________________________________________________
Hi Nick,

I found the best way to add files is to do the following:

1. Right click on "src" > New > Java Class
2. Name the class
3. Copy and paste Java file into the empty project class file

Once we both have our files in the project, then we should be able to
 use Git to seamlessly sync files.

Also, when I "added" the files to our repository, I had to use the following command.
I am not sure if we will continue to have to use it. There probably is a recursive
way to do this.

    git add java/* java/.idea/* java/.idea/.name/*

To add all files and subdirectories, recursively:

    git add .

To add all files except workspace.xml and then commit

    git add . && git rm -f java/.idea/workspace.xml && git commit
    git add . ; git rm -f java/.idea/workspace.xml ; git commit

To do all of above plus ignore "out" files:

    git add . && git rm -f -r java/out/* java/.idea/workspace.xml && git commit
    git add . ; git rm -f -r java/out/* java/.idea/workspace.xml ; git commit

Thanks!
Luke

questions:
1. how to make a constant in java... mining, vein.  do they get passed on through inheritance or no?
2. ask about minernotfull/minerfull... specifically return([entity_pt], False)   just return True or False
4. actions.py sign and adjacent should we implement now? it affects next_position and blob_next_position in worldmodel
5. background and occupancy 2d array.

you can also in this part of the code make a list of entity.. compute distances as


